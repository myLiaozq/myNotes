
//求任意elem距页面顶部的总距离
function getElemTop(elem){
  //声明一个sum,初始化为elem.offsetTop
  var sum=elem.offsetTop;
  //循环:elem.offsetParent!=null
  while(elem.offsetParent!=null){
    //获得elem.offsetParent.offsetTop，累加s到sum上
    sum+=elem.offsetParent.offsetTop;
    //将elem替换为其offsetParent
    elem=elem.offsetParent;
  }//(循环结束)
  return sum;
}


1、窗口参数(只针对窗口，不包括滚动条部分，已经定死)
   1.window.outerHeight/outerWidth (不包括最底部的任务栏)
     window.innerHeight/innerWidth (不包括菜单栏和任务栏)

   2.完整分辨率:screen.height/width (整个屏幕的大小)

   3.可用分辨率:完整分辨率-任务栏部分（最底部分） 相当于window.outerHeight;的高度
     screen.availHeight/availWidth

   4.网页正文部分上： window.screenTop; 只整个窗口，一般为0，除非窗口里面又有窗口


2、文档参数(整个body，包括滚动条部分)

网页可见区域高(不包括border)： document.body.clientHeight;

网页可见区域高(隐藏部分不算)： document.body.offsetHeight (包括边线的宽，隐藏部分不算高度);

offsetTop:获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置，如：section1.offsetTop，是id为section1元素距离父元素顶部的高度

网页正文全文高(包括隐藏部分)： document.body.scrollHeight;(可以滚动的高度，即整个文档内容的高度，包括border的大小，而且隐藏的部分也算)

网页被卷去的高： document.body.scrollTop;



var scrollHeight = $(document).height(); //文档总高度，包括隐藏部分
var scrollTop = $(document).scrollTop(); $(window).scrollTop(); //滚动条滚动的距离，即隐藏距离
var windowHeight = $(window).height(); //当前可见区域高度

var offsetTop = $('.t-inner-right').offset().top; //当前元素距离页面顶部距离，包括隐藏部分，不随滚动条滚动而变化，是固定的




3、鼠标参数
   1.相对于整个屏幕左上角:
      var x=e.screenX   
      var y=e.screenY

   2.相对于文档显示器左上角:
      var x=e.clientX||x
      var y=e.clientY||y

   3.相对于外层元素左上角：
      var x=e.offsetX
      var y=e.offsetY

易混淆点：
clientX 设置或获取鼠标指针位置相对于当前窗口的 x 坐标，其中客户区域不包括窗口自身的控件和滚动条。 
clientY 设置或获取鼠标指针位置相对于当前窗口的 y 坐标，其中客户区域不包括窗口自身的控件和滚动条。 
offsetX 设置或获取鼠标指针位置相对于触发事件的对象的 x 坐标。 
offsetY 设置或获取鼠标指针位置相对于触发事件的对象的 y 坐标。 
screenX 设置或获取获取鼠标指针位置相对于用户屏幕的 x 坐标。 
screenY 设置或获取鼠标指针位置相对于用户屏幕的 y 坐标。 
x 设置或获取鼠标指针位置相对于父文档的 x 像素坐标(亦即相对于当前窗口)。 
y 设置或获取鼠标指针位置相对于父文档的 y 像素坐标(亦即相对于当前窗口)。





